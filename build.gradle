//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
buildscript {
	dependencies {
		classpath "com.modrinth.minotaur:Minotaur:${libs.versions.minotaur.get()}"
		classpath "com.github.breadmoirai:github-release:${libs.versions.githubRelease.get()}"
	}
}

plugins {
	id 'maven-publish'
	alias libs.plugins.loom
}

version = "$project.baseVersion+$project.branch"
archivesBaseName = project.name
group = 'garden.hestia'

repositories {
}

dependencies {
	minecraft libs.mc
	mappings variantOf(libs.qm) { classifier 'intermediary-v2' }
	modImplementation libs.ql
	modImplementation libs.qfapi
}

loom {
	accessWidenerPath = file("src/main/resources/pollinators_paradise.accesswidener")
}

processResources {
	final Map<String, String> map = [
			"version": version.toString(),
			"mc"  : libs.versions.mc.get(),
			"ql"  : libs.versions.ql.get(),
			"qfapi"  : libs.versions.qfapi.get(),

	]
	inputs.properties(map)

	filesMatching('*.mod.json') { expand(map) }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

java {
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	filesMatching('LICENSE') {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}

if (System.getenv("MODRINTH_TOKEN")) {
	apply plugin: "com.modrinth.minotaur"
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'pollinators-paradise'
		versionNumber = project.version
		versionName = baseVersion
		versionType = 'release'
		uploadFile = remapJar
		gameVersions = ['1.20', libs.versions.mc.get()]
		loaders = ['quilt']
		detectLoaders = false
		dependencies {
		}
		changelog = "Changelog: https://github.com/HestiMae/pollinators-paradise/releases/tag/v" + baseVersion
		syncBodyFrom = rootProject.file("README.md").text
	}
}

if (System.getenv("GITHUB_TOKEN")) {
	apply plugin: "com.github.breadmoirai.github-release"
	githubRelease {
		token System.getenv("GITHUB_TOKEN")
		owner "HestiMae"
		repo "pollinators-paradise"
		tagName 'v' + baseVersion
		releaseName baseVersion
		targetCommitish defaultBranch
		draft false
		prerelease false
		releaseAssets remapJar.archiveFile
		allowUploadToExisting true
		generateReleaseNotes true
	}
	tasks.githubRelease.dependsOn remapJar
}
